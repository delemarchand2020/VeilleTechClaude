[tool:pytest]
# Configuration de base
minversion = 6.0
addopts = 
    -ra
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10

# Répertoires et patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers personnalisés
markers =
    asyncio: marque les tests asynchrones
    unit: tests unitaires rapides
    integration: tests d'intégration (peuvent être plus lents)
    connector: tests spécifiques aux connecteurs
    agent: tests spécifiques aux agents
    slow: tests lents qui peuvent être skippés en développement
    external: tests nécessitant des ressources externes (Internet, APIs)
    mock: tests utilisant des mocks
    real_api: tests utilisant de vraies APIs (à éviter en CI)

# Filtres et warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:pkg_resources.*
    ignore::PendingDeprecationWarning
    # Spécifique aux librairies du projet
    ignore::DeprecationWarning:langchain.*
    ignore::DeprecationWarning:openai.*

# Configuration pour les tests asynchrones
asyncio_mode = auto

# Configuration de logging pendant les tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Variables d'environnement pour les tests
env = 
    PYTHONPATH = src
    TESTING = true
    LOG_LEVEL = INFO

# Couverture de code (si vous installez pytest-cov)
# addopts = 
#     --cov=src
#     --cov-report=html:htmlcov
#     --cov-report=term-missing
#     --cov-report=xml
#     --cov-fail-under=80

# Timeout pour éviter les tests qui traînent (si vous installez pytest-timeout)
# timeout = 300

# Configuration pour les tests parallèles (si vous installez pytest-xdist)
# addopts = -n auto
